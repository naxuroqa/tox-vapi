<?xml version="1.0" encoding="utf-8"?>
<html>
  <head>
    <meta charset="UTF-8"/>
    <title>toxcore &ndash; Vala Binding Reference</title>
    <link href="../style.css" rel="stylesheet" type="text/css"/><script src="../scripts.js" type="text/javascript">
    </script>
  </head>
  <body>
    <div class="site_header">toxcore Reference Manual</div>
    <div class="site_body">
      <div class="site_navigation">
        <ul class="navi_main">
          <li class="package_index"><a href="../index.html">Packages</a></li>
        </ul>
        <hr class="navi_hr"/>
        <ul class="navi_main">
          <li class="package">toxcore</li>
        </ul>
        <hr class="navi_hr"/>
        <ul class="navi_main">
          <li class="namespace"><a href="ToxAV.html">ToxAV</a></li>
          <li class="namespace"><a href="ToxCore.html">ToxCore</a></li>
          <li class="namespace"><a href="ToxCore.Version.html">ToxCore.Version</a></li>
          <li class="namespace"><a href="ToxEncrypt.html">ToxEncrypt</a></li>
        </ul>
      </div>
      <div class="site_content">
        <h1 class="main_title" id="toxcore">toxcore</h1>
        <hr class="main_hr"/>
        <h2 class="main_title">Description:</h2>
        <h2 class="main_title">Content:</h2>
        <h3 class="main_title">Namespaces:</h3>
        <ul class="navi_inline">
          <li class="namespace"><a href="ToxAV.html">ToxAV</a></li>
          <h3 class="main_title">Classes:</h3>
          <ul class="navi_inline">
            <li class="class"><a href="ToxAV.ToxAV.html">ToxAV</a> - <span class="brief_description">The ToxAV instance type. Each ToxAV instance can 
                be bound to only one Tox instance, and Tox instance can have only one ToxAV instance. One must make sure to close ToxAV instance prior
                closing Tox instance otherwise undefined behaviour occurs. Upon closing of ToxAV instance, all active calls will be forcibly 
                terminated without notifying peers.</span></li>
          </ul>
          <h3 class="main_title">Enums:</h3>
          <ul class="navi_inline">
            <li class="enum"><a href="ToxAV.ErrNew.html">ErrNew</a></li>
            <li class="enum"><a href="ToxAV.ErrCall.html">ErrCall</a></li>
            <li class="enum"><a href="ToxAV.ErrAnswer.html">ErrAnswer</a></li>
            <li class="enum"><a href="ToxAV.FriendCallState.html">FriendCallState</a></li>
            <li class="enum"><a href="ToxAV.CallControl.html">CallControl</a></li>
            <li class="enum"><a href="ToxAV.ErrCallControl.html">ErrCallControl</a></li>
            <li class="enum"><a href="ToxAV.ErrBitRateSet.html">ErrBitRateSet</a></li>
            <li class="enum"><a href="ToxAV.ErrSendFrame.html">ErrSendFrame</a></li>
          </ul>
          <h3 class="main_title">Delegates:</h3>
          <ul class="navi_inline">
            <li class="delegate"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">delegate</span> <span class="main_keyword">void</span> <b><a href="ToxAV.CallCallback.html" class="delegate">CallCallback</a></b> (<span class="main_type"><a href="ToxAV.ToxAV.html" class="class">ToxAV</a></span> self, <span class="main_basic_type"><span class="struct">uint32</span></span> friend_number, <span class="main_basic_type"><span class="struct">bool</span></span> audio_enabled, <span class="main_basic_type"><span class="struct">bool</span></span> video_enabled)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">The function type for the call callback.</span>
              </div></li>
            <li class="delegate"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">delegate</span> <span class="main_keyword">void</span> <b><a href="ToxAV.CallStateCallback.html" class="delegate">CallStateCallback</a></b> (<span class="main_type"><a href="ToxAV.ToxAV.html" class="class">ToxAV</a></span> self, <span class="main_basic_type"><span class="struct">uint32</span></span> friend_number, <span class="main_type"><a href="ToxAV.FriendCallState.html" class="enum">FriendCallState</a></span> state)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">The function type for the call_state callback.</span>
              </div></li>
            <li class="delegate"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">delegate</span> <span class="main_keyword">void</span> <b><a href="ToxAV.AudioBitRateCallback.html" class="delegate">AudioBitRateCallback</a></b> (<span class="main_type"><a href="ToxAV.ToxAV.html" class="class">ToxAV</a></span> self, <span class="main_basic_type"><span class="struct">uint32</span></span> friend_number, <span class="main_basic_type"><span class="struct">uint32</span></span> audio_bit_rate)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">The function type for the audio_bit_rate callback. The event is 
                  triggered when the network becomes too saturated for current bit rates at which point core suggests new bit rates.</span>
              </div></li>
            <li class="delegate"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">delegate</span> <span class="main_keyword">void</span> <b><a href="ToxAV.VideoBitRateCallback.html" class="delegate">VideoBitRateCallback</a></b> (<span class="main_type"><a href="ToxAV.ToxAV.html" class="class">ToxAV</a></span> self, <span class="main_basic_type"><span class="struct">uint32</span></span> friend_number, <span class="main_basic_type"><span class="struct">uint32</span></span> video_bit_rate)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">The function type for the video_bit_rate callback. The event is 
                  triggered when the network becomes too saturated for current bit rates at which point core suggests new bit rates.</span>
              </div></li>
            <li class="delegate"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">delegate</span> <span class="main_keyword">void</span> <b><a href="ToxAV.AudioReceiveFrameCallback.html" class="delegate">AudioReceiveFrameCallback</a></b> (<span class="main_type"><a href="ToxAV.ToxAV.html" class="class">ToxAV</a></span> self, <span class="main_basic_type"><span class="struct">uint32</span></span> friend_number, <span class="main_basic_type"><span class="struct">int16</span></span>[] pcm, <span class="main_basic_type"><span class="struct">uint8</span></span> channels, <span class="main_basic_type"><span class="struct">uint32</span></span> sampling_rate)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">The function type for the audio_receive_frame callback. The callback
                  can be called multiple times per single iteration depending on the amount of queued frames in the buffer. The received format is the
                  same as in send function.</span>
              </div></li>
            <li class="delegate"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">delegate</span> <span class="main_keyword">void</span> <b><a href="ToxAV.VideoReceiveFrameCallback.html" class="delegate">VideoReceiveFrameCallback</a></b> (<span class="main_type"><a href="ToxAV.ToxAV.html" class="class">ToxAV</a></span> self, <span class="main_basic_type"><span class="struct">uint32</span></span> friend_number, <span class="main_basic_type"><span class="struct">uint16</span></span> width, <span class="main_basic_type"><span class="struct">uint16</span></span> height, <span class="main_basic_type"><span class="struct">uint8</span></span>[] y, <span class="main_basic_type"><span class="struct">uint8</span></span>[] u, <span class="main_basic_type"><span class="struct">uint8</span></span>[] v, <span class="main_basic_type"><span class="struct">int32</span></span> ystride, <span class="main_basic_type"><span class="struct">int32</span></span> ustride, <span class="main_basic_type"><span class="struct">int32</span></span> vstride)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">The function type for the video_receive_frame callback.</span>
              </div></li>
          </ul>
          <li class="namespace"><a href="ToxCore.html">ToxCore</a></li>
          <h3 class="main_title">Classes:</h3>
          <ul class="navi_inline">
            <li class="class"><a href="ToxCore.Options.html">Options</a></li>
            <li class="class"><a href="ToxCore.Tox.html">Tox</a></li>
          </ul>
          <h3 class="main_title">Enums:</h3>
          <ul class="navi_inline">
            <li class="enum"><a href="ToxCore.UserStatus.html">UserStatus</a></li>
            <li class="enum"><a href="ToxCore.MessageType.html">MessageType</a></li>
            <li class="enum"><a href="ToxCore.ProxyType.html">ProxyType</a></li>
            <li class="enum"><a href="ToxCore.SaveDataType.html">SaveDataType</a></li>
            <li class="enum"><a href="ToxCore.LogLevel.html">LogLevel</a></li>
            <li class="enum"><a href="ToxCore.ErrOptionsNew.html">ErrOptionsNew</a></li>
            <li class="enum"><a href="ToxCore.ErrNew.html">ErrNew</a></li>
            <li class="enum"><a href="ToxCore.ErrBootstrap.html">ErrBootstrap</a></li>
            <li class="enum"><a href="ToxCore.Connection.html">Connection</a></li>
            <li class="enum"><a href="ToxCore.ErrSetInfo.html">ErrSetInfo</a></li>
            <li class="enum"><a href="ToxCore.ErrFriendAdd.html">ErrFriendAdd</a></li>
            <li class="enum"><a href="ToxCore.ErrFriendDelete.html">ErrFriendDelete</a></li>
            <li class="enum"><a href="ToxCore.ErrFriendByPublicKey.html">ErrFriendByPublicKey</a></li>
            <li class="enum"><a href="ToxCore.ErrFriendGetPublicKey.html">ErrFriendGetPublicKey</a></li>
            <li class="enum"><a href="ToxCore.ErrFriendGetLastOnline.html">ErrFriendGetLastOnline</a></li>
            <li class="enum"><a href="ToxCore.ErrFriendQuery.html">ErrFriendQuery</a></li>
            <li class="enum"><a href="ToxCore.ErrSetTyping.html">ErrSetTyping</a></li>
            <li class="enum"><a href="ToxCore.ErrFriendSendMessage.html">ErrFriendSendMessage</a></li>
            <li class="enum"><a href="ToxCore.FileKind.html">FileKind</a></li>
            <li class="enum"><a href="ToxCore.FileControl.html">FileControl</a></li>
            <li class="enum"><a href="ToxCore.ErrFileControl.html">ErrFileControl</a></li>
            <li class="enum"><a href="ToxCore.ErrFileSeek.html">ErrFileSeek</a></li>
            <li class="enum"><a href="ToxCore.ErrFileGet.html">ErrFileGet</a></li>
            <li class="enum"><a href="ToxCore.ErrFileSend.html">ErrFileSend</a></li>
            <li class="enum"><a href="ToxCore.ErrFileSendChunk.html">ErrFileSendChunk</a></li>
            <li class="enum"><a href="ToxCore.ConferenceType.html">ConferenceType</a></li>
            <li class="enum"><a href="ToxCore.ConferenceStateChange.html">ConferenceStateChange</a></li>
            <li class="enum"><a href="ToxCore.ErrConferenceNew.html">ErrConferenceNew</a></li>
            <li class="enum"><a href="ToxCore.ErrConferenceDelete.html">ErrConferenceDelete</a></li>
            <li class="enum"><a href="ToxCore.ErrConferencePeerQuery.html">ErrConferencePeerQuery</a></li>
            <li class="enum"><a href="ToxCore.ErrConferenceInvite.html">ErrConferenceInvite</a></li>
            <li class="enum"><a href="ToxCore.ErrConferenceJoin.html">ErrConferenceJoin</a></li>
            <li class="enum"><a href="ToxCore.ErrConferenceSendMessage.html">ErrConferenceSendMessage</a></li>
            <li class="enum"><a href="ToxCore.ErrConferenceTitle.html">ErrConferenceTitle</a></li>
            <li class="enum"><a href="ToxCore.ErrConferenceGetType.html">ErrConferenceGetType</a></li>
            <li class="enum"><a href="ToxCore.ErrFriendCustomPacket.html">ErrFriendCustomPacket</a></li>
            <li class="enum"><a href="ToxCore.ErrGetPort.html">ErrGetPort</a></li>
          </ul>
          <h3 class="main_title">Constants:</h3>
          <ul class="navi_inline">
            <li class="constant"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.PUBLIC_KEY_SIZE.html" class="constant">PUBLIC_KEY_SIZE</a></b>
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.SECRET_KEY_SIZE.html" class="constant">SECRET_KEY_SIZE</a></b>
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.NOSPAM_SIZE.html" class="constant">NOSPAM_SIZE</a></b>
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.ADDRESS_SIZE.html" class="constant">ADDRESS_SIZE</a></b>
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="deprecated"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.MAX_NAME_LENGTH.html" class="constant">MAX_NAME_LENGTH</a></b>
                </span></span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="deprecated"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.MAX_STATUS_MESSAGE_LENGTH.html" class="constant">MAX_STATUS_MESSAGE_LENGTH</a></b>
                </span></span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="deprecated"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.MAX_FRIEND_REQUEST_LENGTH.html" class="constant">MAX_FRIEND_REQUEST_LENGTH</a></b>
                </span></span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="deprecated"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.MAX_MESSAGE_LENGTH.html" class="constant">MAX_MESSAGE_LENGTH</a></b>
                </span></span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="deprecated"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.MAX_CUSTOM_PACKET_SIZE.html" class="constant">MAX_CUSTOM_PACKET_SIZE</a></b>
                </span></span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.HASH_LENGTH.html" class="constant">HASH_LENGTH</a></b>
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.FILE_ID_LENGTH.html" class="constant">FILE_ID_LENGTH</a></b>
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="deprecated"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.MAX_FILENAME_LENGTH.html" class="constant">MAX_FILENAME_LENGTH</a></b>
                </span></span>
              <div class="leaf_brief_description">
              </div></li>
          </ul>
          <h3 class="main_title">Delegates:</h3>
          <ul class="navi_inline">
            <li class="delegate"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">delegate</span> <span class="main_keyword">void</span> <b><a href="ToxCore.LogCallback.html" class="delegate">LogCallback</a></b> (<span class="main_type"><a href="ToxCore.Tox.html" class="class">Tox</a></span> self, <span class="main_type"><a href="ToxCore.LogLevel.html" class="enum">LogLevel</a></span> level, <span class="main_basic_type"><span class="class">string</span></span> file, <span class="main_basic_type"><span class="struct">uint32</span></span> line, <span class="main_basic_type"><span class="class">string</span></span> func, <span class="main_basic_type"><span class="class">string</span></span> message)
              </span>
              <div class="leaf_brief_description">
              </div></li>
          </ul>
          <h3 class="main_title">Methods:</h3>
          <ul class="navi_inline">
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.public_key_size.html" class="method">public_key_size</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.secret_key_size.html" class="method">secret_key_size</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.nospam_size.html" class="method">nospam_size</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.address_size.html" class="method">address_size</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.max_name_length.html" class="method">max_name_length</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.max_status_message_length.html" class="method">max_status_message_length</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.max_friend_request_length.html" class="method">max_friend_request_length</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.max_message_length.html" class="method">max_message_length</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.max_custom_packet_size.html" class="method">max_custom_packet_size</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.hash_length.html" class="method">hash_length</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.file_id_length.html" class="method">file_id_length</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.max_filename_length.html" class="method">max_filename_length</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
          </ul>
          <li class="namespace"><a href="ToxCore.Version.html">Version</a></li>
          <h3 class="main_title">Constants:</h3>
          <ul class="navi_inline">
            <li class="constant"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.Version.MAJOR.html" class="constant">MAJOR</a></b>
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.Version.MINOR.html" class="constant">MINOR</a></b>
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.Version.PATCH.html" class="constant">PATCH</a></b>
              </span>
              <div class="leaf_brief_description">
              </div></li>
          </ul>
          <h3 class="main_title">Methods:</h3>
          <ul class="navi_inline">
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.Version.major.html" class="method">major</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.Version.minor.html" class="method">minor</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxCore.Version.patch.html" class="method">patch</a></b> ()
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">bool</span></span> <b><a href="ToxCore.Version.is_compatible.html" class="method">is_compatible</a></b> (<span class="main_basic_type"><span class="struct">uint32</span></span> major, <span class="main_basic_type"><span class="struct">uint32</span></span> minor, <span class="main_basic_type"><span class="struct">uint32</span></span> patch)
              </span>
              <div class="leaf_brief_description">
              </div></li>
          </ul>
          <li class="namespace"><a href="ToxEncrypt.html">ToxEncrypt</a></li>
          <h3 class="main_title">Classes:</h3>
          <ul class="navi_inline">
            <li class="class"><a href="ToxEncrypt.PassKey.html">PassKey</a> - <span class="brief_description">This type represents a pass-key.</span>
            </li>
          </ul>
          <h3 class="main_title">Enums:</h3>
          <ul class="navi_inline">
            <li class="enum"><a href="ToxEncrypt.ErrKeyDerivation.html">ErrKeyDerivation</a></li>
            <li class="enum"><a href="ToxEncrypt.ErrEncryption.html">ErrEncryption</a></li>
            <li class="enum"><a href="ToxEncrypt.ErrDecryption.html">ErrDecryption</a></li>
            <li class="enum"><a href="ToxEncrypt.ErrGetSalt.html">ErrGetSalt</a></li>
          </ul>
          <h3 class="main_title">Constants:</h3>
          <ul class="navi_inline">
            <li class="constant"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxEncrypt.PASS_SALT_LENGTH.html" class="constant">PASS_SALT_LENGTH</a></b>
              </span>
              <div class="leaf_brief_description"><span class="brief_description">The size of the salt part of a pass-key.</span>
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxEncrypt.PASS_KEY_LENGTH.html" class="constant">PASS_KEY_LENGTH</a></b>
              </span>
              <div class="leaf_brief_description"><span class="brief_description">The size of the key part of a pass-key.</span>
              </div></li>
            <li class="constant"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">const</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxEncrypt.PASS_ENCRYPTION_EXTRA_LENGTH.html" class="constant">PASS_ENCRYPTION_EXTRA_LENGTH</a></b>
              </span>
              <div class="leaf_brief_description"><span class="brief_description">The amount of additional data required to store any encrypted byte 
                  array. Encrypting an array of N bytes requires N + TOX_PASS_ENCRYPTION_EXTRA_LENGTH bytes in the encrypted byte array.</span>
              </div></li>
          </ul>
          <h3 class="main_title">Methods:</h3>
          <ul class="navi_inline">
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxEncrypt.pass_salt_length.html" class="method">pass_salt_length</a></b> ()
              </span>
              <div class="leaf_brief_description"><span class="brief_description">The size of the salt part of a pass-key.</span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxEncrypt.pass_key_length.html" class="method">pass_key_length</a></b> ()
              </span>
              <div class="leaf_brief_description"><span class="brief_description">The size of the key part of a pass-key.</span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint32</span></span> <b><a href="ToxEncrypt.pass_encryption_extra_length.html" class="method">pass_encryption_extra_length</a></b> ()
              </span>
              <div class="leaf_brief_description"><span class="brief_description">The amount of additional data required to store any encrypted byte 
                  array. Encrypting an array of N bytes requires N + TOX_PASS_ENCRYPTION_EXTRA_LENGTH bytes in the encrypted byte array.</span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint8</span></span>[]? <b><a href="ToxEncrypt.pass_encrypt.html" class="method">pass_encrypt</a></b> (<span class="main_basic_type"><span class="struct">uint8</span></span>[] plaintext, <span class="main_basic_type"><span class="struct">uint8</span></span>[]? passphrase, <span class="main_keyword">ref</span> <span class="main_type"><a href="ToxEncrypt.ErrEncryption.html" class="enum">ErrEncryption</a></span> error)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">Encrypts the given data with the given passphrase.</span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint8</span></span>[]? <b><a href="ToxEncrypt.pass_decrypt.html" class="method">pass_decrypt</a></b> (<span class="main_basic_type"><span class="struct">uint8</span></span>[] ciphertext, <span class="main_basic_type"><span class="struct">uint8</span></span>[]? passphrase, <span class="main_keyword">ref</span> <span class="main_type"><a href="ToxEncrypt.ErrDecryption.html" class="enum">ErrDecryption</a></span> error)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">Decrypts the given data with the given passphrase.</span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">uint8</span></span>[]? <b><a href="ToxEncrypt.get_salt.html" class="method">get_salt</a></b> (<span class="main_basic_type"><span class="struct">uint8</span></span>[] ciphertext, <span class="main_keyword">ref</span> <span class="main_type"><a href="ToxEncrypt.ErrGetSalt.html" class="enum">ErrGetSalt</a></span> error)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">Retrieves the salt used to encrypt the given data.</span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">bool</span></span> <b><a href="ToxEncrypt.data_is_encrypted.html" class="method">data_is_encrypted</a></b> (<span class="main_basic_type"><span class="struct">uint8</span></span>[] data)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">Determines whether or not the given data is encrypted by this 
                  module.</span>
              </div></li>
          </ul>
        </ul>
      </div>
    </div><br/>
    <div class="site_footer">Generated by <a href="http://www.valadoc.org/">Valadoc</a>
    </div>
  </body>
</html>